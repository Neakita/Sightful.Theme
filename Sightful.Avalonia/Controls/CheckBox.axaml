<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:icons="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia">
	<Design.PreviewWith>
        <!-- ReSharper disable Xaml.StyleClassNotFound -->
        <Border Classes="outer wide-padding">
            <!-- ReSharper restore Xaml.StyleClassNotFound -->
            <StackPanel Spacing="20">
				<CheckBox>Unchecked</CheckBox>
				<CheckBox IsChecked="True">Checked</CheckBox>
				<CheckBox IsThreeState="True" IsChecked="{x:Null}">Indeterminate</CheckBox>
				<CheckBox Width="120">Checkbox should wrap its text</CheckBox>
			</StackPanel>
		</Border>
	</Design.PreviewWith>
	<ControlTheme x:Key="{x:Type CheckBox}" TargetType="CheckBox">
		<Setter Property="Template">
			<ControlTemplate>
				<Grid ColumnDefinitions="Auto *">
					<ContentPresenter Name="GlyphPresenter"
                                      Grid.Column="0"
					                  Width="16"
					                  Height="16"
					                  Background="{DynamicResource ControlBackground}"
					                  CornerRadius="4"
					                  Foreground="{DynamicResource HighAccentButtonForeground}"
					                  Padding="2">
						<ContentPresenter.Transitions>
							<Transitions>
								<BrushTransition Property="Background" Duration="{DynamicResource BrushTransitionDuration}"/>
							</Transitions>
						</ContentPresenter.Transitions>
					</ContentPresenter>
					<ContentPresenter Grid.Column="1"
					                  Content="{TemplateBinding Content}"
					                  ContentTemplate="{TemplateBinding Template}"
					                  Padding="{TemplateBinding Padding}"
					                  RecognizesAccessKey="True"
					                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
					                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
					                  TextWrapping="Wrap"
                                      Margin="8 0 0 0"
                                      IsVisible="{TemplateBinding Content, Converter={x:Static ObjectConverters.IsNotNull}}"/>
				</Grid>
			</ControlTemplate>
		</Setter>
		<Style Selector="^:pointerover /template/ ContentPresenter#GlyphPresenter">
			<Setter Property="Background" Value="{DynamicResource ButtonHoverBackground}"/>
		</Style>
		<Style Selector="^:pressed /template/ ContentPresenter#GlyphPresenter">
			<Setter Property="Background" Value="{DynamicResource PressedButtonBackground}"/>
		</Style>
		<Style Selector="^:checked /template/ ContentPresenter#GlyphPresenter">
			<Setter Property="Content">
				<Template>
					<icons:MaterialIcon Kind="Check"/>
				</Template>
			</Setter>
		</Style>
        <Style Selector="^:indeterminate /template/ ContentPresenter#GlyphPresenter">
            <Setter Property="Content">
                <Template>
                    <icons:MaterialIcon Kind="Minus"/>
                </Template>
            </Setter>
        </Style>
        <Style Selector="^:not(:unchecked)">
            <Style Selector="^ /template/ ContentPresenter#GlyphPresenter">
                <Setter Property="Background"
                        Value="{DynamicResource HighAccentButtonBackground}"/>
            </Style>
            <Style Selector="^:pointerover /template/ ContentPresenter#GlyphPresenter">
                <Setter Property="Background" Value="{DynamicResource HighAccentHoveredButtonBackground}"/>
            </Style>
            <Style Selector="^:pressed /template/ ContentPresenter#GlyphPresenter">
                <Setter Property="Background" Value="{DynamicResource HighAccentPressedButtonBackground}"/>
            </Style>
        </Style>
	</ControlTheme>
</ResourceDictionary>