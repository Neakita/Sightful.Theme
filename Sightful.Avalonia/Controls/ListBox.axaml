<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<Design.PreviewWith>
        <!-- ReSharper disable Xaml.StyleClassNotFound -->
        <Border Classes="inner wide-padding">
            <!-- ReSharper restore Xaml.StyleClassNotFound -->
            <StackPanel Spacing="40">
				<ListBox>
					<ListBoxItem>Lightweight and modular API</ListBoxItem>
					<ListBoxItem>Test</ListBoxItem>
					<ListBoxItem>Test</ListBoxItem>
					<ListBoxItem>Test</ListBoxItem>
				</ListBox>
				<ListBox Classes="compact">
					<ListBoxItem>Lightweight and modular API</ListBoxItem>
					<ListBoxItem>Test</ListBoxItem>
					<ListBoxItem>Test</ListBoxItem>
					<ListBoxItem>Test</ListBoxItem>
				</ListBox>
			</StackPanel>
		</Border>
	</Design.PreviewWith>
	<ControlTheme x:Key="{x:Type ListBox}" TargetType="ListBox">
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.IsScrollChainingEnabled" Value="True"/>
		<Setter Property="ScrollViewer.IsScrollInertiaEnabled" Value="True"/>
		<Setter Property="ItemsPanel">
			<ItemsPanelTemplate>
				<VirtualizingStackPanel/>
			</ItemsPanelTemplate>
		</Setter>
		<Setter Property="FontWeight" Value="500"/>
		<Setter Property="Foreground" Value="{DynamicResource SecondaryForeground}"/>
		<Setter Property="Template">
			<ControlTemplate>
				<Border ClipToBounds="{TemplateBinding ClipToBounds}"
				        Background="{TemplateBinding Background}"
				        BorderBrush="{TemplateBinding BorderBrush}"
				        BorderThickness="{TemplateBinding BorderThickness}"
				        CornerRadius="{TemplateBinding CornerRadius}">
					<ScrollViewer Name="PART_ScrollViewer"
					              VerticalSnapPointsType="{TemplateBinding (ScrollViewer.VerticalSnapPointsType)}"
					              HorizontalSnapPointsType="{TemplateBinding (ScrollViewer.HorizontalSnapPointsType)}"
					              HorizontalScrollBarVisibility="{TemplateBinding (ScrollViewer.HorizontalScrollBarVisibility)}"
					              VerticalScrollBarVisibility="{TemplateBinding (ScrollViewer.VerticalScrollBarVisibility)}"
					              IsScrollChainingEnabled="{TemplateBinding (ScrollViewer.IsScrollChainingEnabled)}"
					              IsScrollInertiaEnabled="{TemplateBinding (ScrollViewer.IsScrollInertiaEnabled)}"
					              IsDeferredScrollingEnabled="{TemplateBinding (ScrollViewer.IsDeferredScrollingEnabled)}"
					              AllowAutoHide="{TemplateBinding (ScrollViewer.AllowAutoHide)}"
					              BringIntoViewOnFocusChange="{TemplateBinding (ScrollViewer.BringIntoViewOnFocusChange)}"
					              CornerRadius="{TemplateBinding CornerRadius}"
					              Background="{TemplateBinding Background}">
                        <!--Compensation of ListBoxItem internal margin used to simulate StackPanel.Spacing even if VirtualizingStackPanel is used-->
                        <Decorator Margin="0 -6">
                            <ItemsPresenter Name="PART_ItemsPresenter"
                                            ItemsPanel="{TemplateBinding ItemsPanel}"
                                            Margin="{TemplateBinding Padding}"/>
                        </Decorator>
					</ScrollViewer>
				</Border>
			</ControlTemplate>
		</Setter>
		<Style Selector="^.compact">
			<Setter Property="ItemsPanel">
				<ItemsPanelTemplate>
					<StackPanel Spacing="4"/>
				</ItemsPanelTemplate>
			</Setter>
		</Style>
		<Style Selector="^.fade">
			<Setter Property="ItemContainerTheme" Value="{DynamicResource FadeListBoxItem}"/>
		</Style>
	</ControlTheme>
</ResourceDictionary>
